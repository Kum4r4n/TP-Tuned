@page "/"
@attribute [Authorize]

@using AutoMapper
@using Chinook.ClientModels
@using Chinook.Models
@using Chinook.Services.Interfaces
@using Microsoft.EntityFrameworkCore

<PageTitle>Index</PageTitle>

<h1>Artists</h1>

@if (Artists == null)
{
    <Loading />
}
else
{

    <div class="mb-3">
        <input type="text" id="search" class="form-control" placeholder="search" @bind="_searchText">
        <button class="btn btn-success" @onclick="SearchByArtist">Search</button>
    </div>

    <table class="table table-striped table-hover table-sm">
        <thead>
            <tr>
                <th>Name</th>
                <th>Number of albums</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var artist in Artists)
            {
                <tr>
                    <td><a href="Artist/@artist.ArtistId">@artist.Name</a></td>
                    <td>@artist.Albums.Count()</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ArtistViewModel> Artists;
    [Inject] private IArtistService _artistService { get; set; }
    [Inject] private IMapper _mapper { get; set; }
    private string _searchText;

    protected override async Task OnInitializedAsync() {
        await InvokeAsync(StateHasChanged);
        Artists = await GetArtists(_searchText);
    }

    public async Task<List<ArtistViewModel>> GetArtists(string searchText)
    {
        var data = await _artistService.GetArtists(searchText);
        return _mapper.Map<List<ArtistViewModel>>(data);
    }

    public async Task<List<Album>> GetAlbumsForArtist(int artistId)
    {
        return new List<Album>();
    }

    private async Task SearchByArtist()
    {
        Artists = await GetArtists(_searchText);
    }
}
